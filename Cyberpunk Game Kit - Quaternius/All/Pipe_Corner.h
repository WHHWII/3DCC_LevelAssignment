// "Pipe_Corner.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Pipe_Corner.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Pipe_Corner_version_
const char Pipe_Corner_version[4] = { '0','1','9','d' };
#define _Pipe_Corner_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Pipe_Corner_vertexcount_
const unsigned Pipe_Corner_vertexcount = 160;
#define _Pipe_Corner_vertexcount_
#endif
#ifndef _Pipe_Corner_indexcount_
const unsigned Pipe_Corner_indexcount = 912;
#define _Pipe_Corner_indexcount_
#endif
#ifndef _Pipe_Corner_materialcount_
const unsigned Pipe_Corner_materialcount = 1; // can be used for batched draws
#define _Pipe_Corner_materialcount_
#endif
#ifndef _Pipe_Corner_meshcount_
const unsigned Pipe_Corner_meshcount = 1;
#define _Pipe_Corner_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Pipe_Corner_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Pipe_Corner_vertices[160] =
{
	{	{ 0.481205f, -0.080847f, -0.732463f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.016300f, -0.688700f, 0.724900f }	},
	{	{ 0.511946f, -0.082165f, -0.730537f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.282300f, -0.762500f, 0.582200f }	},
	{	{ 0.496618f, -0.000000f, -0.712068f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.364400f, -0.000000f, 0.931200f }	},
	{	{ 0.472963f, -0.000000f, -0.709332f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.011000f, -0.000000f, 0.999900f }	},
	{	{ 0.159713f, -0.000000f, -0.703766f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.004700f, -0.000000f, 1.000000f }	},
	{	{ 0.162062f, -0.079166f, -0.729305f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.002000f, -0.693000f, 0.721000f }	},
	{	{ 0.481205f, 0.080848f, -0.732463f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.016300f, 0.688700f, 0.724900f }	},
	{	{ 0.162062f, 0.079166f, -0.729305f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.002000f, 0.693000f, 0.721000f }	},
	{	{ 0.511946f, 0.082165f, -0.730537f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.282300f, 0.762500f, 0.582200f }	},
	{	{ 0.650808f, 0.077079f, -0.782027f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.677900f, 0.654500f, -0.334900f }	},
	{	{ 0.675883f, 0.077563f, -0.682493f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.727000f, 0.677800f, -0.110100f }	},
	{	{ 0.700693f, -0.000000f, -0.686467f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.987700f, -0.000000f, -0.156100f }	},
	{	{ 0.671833f, 0.000000f, -0.792968f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.894700f, 0.000000f, -0.446700f }	},
	{	{ 0.619246f, 0.000000f, -0.859822f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.607200f, 0.000000f, -0.794600f }	},
	{	{ 0.603918f, 0.076918f, -0.841352f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.457600f, 0.648600f, -0.608200f }	},
	{	{ 0.650808f, -0.077078f, -0.782027f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.677900f, -0.654500f, -0.334900f }	},
	{	{ 0.603918f, -0.076918f, -0.841352f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.457600f, -0.648600f, -0.608200f }	},
	{	{ 0.675883f, -0.077562f, -0.682493f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.727000f, -0.677800f, -0.110100f }	},
	{	{ 0.601455f, -0.105225f, -0.670572f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.030200f, -0.999500f, -0.009500f }	},
	{	{ 0.587735f, -0.105777f, -0.749201f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.075000f, -0.996600f, -0.033100f }	},
	{	{ 0.557932f, -0.106055f, -0.785944f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.056000f, -0.995900f, -0.071500f }	},
	{	{ 0.524661f, -0.081586f, -0.716376f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.602300f, -0.754000f, 0.262200f }	},
	{	{ 0.527027f, -0.080275f, -0.658650f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.715800f, -0.698100f, 0.017300f }	},
	{	{ 0.524661f, 0.081587f, -0.716376f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.602300f, 0.754000f, 0.262200f }	},
	{	{ 0.527027f, 0.080275f, -0.658650f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.715800f, 0.698100f, 0.017300f }	},
	{	{ 0.601455f, 0.105225f, -0.670571f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.030200f, 0.999500f, -0.009500f }	},
	{	{ 0.587735f, 0.105777f, -0.749201f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.075000f, 0.996600f, -0.033100f }	},
	{	{ 0.557932f, 0.106055f, -0.785944f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.056000f, 0.995900f, -0.071500f }	},
	{	{ 0.526720f, 0.079390f, -0.526027f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.708200f, 0.706000f, -0.002300f }	},
	{	{ 0.525077f, 0.078718f, -0.355957f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.708900f, 0.705300f, -0.000900f }	},
	{	{ 0.603975f, 0.104958f, -0.355957f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.002500f, 1.000000f, 0.000200f }	},
	{	{ 0.605207f, 0.105008f, -0.529000f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.010800f, 0.999900f, -0.001800f }	},
	{	{ 0.683694f, 0.078122f, -0.531972f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.715400f, 0.698500f, -0.017900f }	},
	{	{ 0.682874f, 0.078718f, -0.355957f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.708500f, 0.705700f, 0.000700f }	},
	{	{ 0.683694f, -0.078122f, -0.531972f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.715400f, -0.698500f, -0.017900f }	},
	{	{ 0.682874f, -0.078720f, -0.355957f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.708500f, -0.705700f, 0.000700f }	},
	{	{ 0.603975f, -0.104959f, -0.355957f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.002500f, -1.000000f, 0.000200f }	},
	{	{ 0.605207f, -0.105009f, -0.529000f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.010800f, -0.999900f, -0.001800f }	},
	{	{ 0.526720f, -0.079391f, -0.526027f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.708200f, -0.706000f, -0.002300f }	},
	{	{ 0.525077f, -0.078720f, -0.355957f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.708900f, -0.705300f, -0.000900f }	},
	{	{ 0.709173f, -0.000000f, -0.355957f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.001400f }	},
	{	{ 0.709857f, -0.000000f, -0.532963f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.999700f, -0.000000f, -0.026400f }	},
	{	{ 0.498777f, -0.000000f, -0.355957f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.002000f }	},
	{	{ 0.500558f, -0.000000f, -0.525037f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.007900f }	},
	{	{ 0.502218f, -0.000000f, -0.654675f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.002600f }	},
	{	{ 0.505933f, 0.105451f, -0.801857f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.010100f, 0.998800f, -0.047500f }	},
	{	{ 0.169109f, 0.104737f, -0.805922f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.000500f, 0.999900f, -0.015800f }	},
	{	{ 0.530660f, 0.077329f, -0.871250f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.156300f, 0.662100f, -0.733000f }	},
	{	{ 0.176156f, 0.077939f, -0.882538f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.008300f, 0.685100f, -0.728400f }	},
	{	{ 0.538903f, 0.000000f, -0.894381f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.219400f, -0.000000f, -0.975600f }	},
	{	{ 0.178504f, -0.000000f, -0.908077f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.013100f, -0.000000f, -0.999900f }	},
	{	{ 0.530660f, -0.077329f, -0.871249f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.156300f, -0.662100f, -0.732900f }	},
	{	{ 0.176156f, -0.077939f, -0.882538f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.008300f, -0.685100f, -0.728400f }	},
	{	{ 0.505933f, -0.105451f, -0.801857f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.010100f, -0.998800f, -0.047500f }	},
	{	{ 0.169109f, -0.104736f, -0.805922f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.000500f, -0.999900f, -0.015800f }	},
	{	{ 0.503637f, -0.000000f, -0.705434f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.927400f, -0.000000f, 0.374000f }	},
	{	{ -1.119175f, -0.000001f, -0.894381f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.207700f, 0.000000f, -0.978200f }	},
	{	{ -1.110932f, 0.077329f, -0.871249f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.148100f, 0.660600f, -0.735900f }	},
	{	{ -1.061478f, -0.080848f, -0.732463f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.017700f, -0.687800f, 0.725700f }	},
	{	{ -1.086205f, -0.105451f, -0.801857f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.008900f, -0.998800f, -0.048700f }	},
	{	{ -1.086205f, 0.105451f, -0.801857f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.008900f, 0.998800f, -0.048700f }	},
	{	{ -1.061478f, 0.080847f, -0.732463f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.017700f, 0.687800f, 0.725700f }	},
	{	{ -1.092219f, 0.082165f, -0.730537f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.282300f, 0.762500f, 0.582200f }	},
	{	{ -1.076890f, 0.000000f, -0.712068f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.364400f, 0.000000f, 0.931200f }	},
	{	{ -1.053235f, 0.000000f, -0.709332f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.005900f, 0.000000f, 1.000000f }	},
	{	{ -1.092219f, -0.082165f, -0.730537f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.282300f, -0.762500f, 0.582200f }	},
	{	{ -1.231080f, -0.077079f, -0.782027f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.677900f, -0.654500f, -0.334900f }	},
	{	{ -1.256155f, -0.077563f, -0.682493f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.727000f, -0.677800f, -0.110100f }	},
	{	{ -1.280965f, 0.000000f, -0.686467f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.987700f, 0.000000f, -0.156100f }	},
	{	{ -1.252105f, -0.000000f, -0.792968f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.894700f, -0.000000f, -0.446700f }	},
	{	{ -1.199518f, -0.000000f, -0.859822f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.607200f, -0.000000f, -0.794600f }	},
	{	{ -1.184190f, -0.076918f, -0.841352f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.457600f, -0.648600f, -0.608200f }	},
	{	{ -1.231080f, 0.077078f, -0.782027f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.677900f, 0.654500f, -0.334900f }	},
	{	{ -1.184190f, 0.076918f, -0.841352f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.457600f, 0.648600f, -0.608200f }	},
	{	{ -1.256155f, 0.077562f, -0.682493f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.727000f, 0.677800f, -0.110100f }	},
	{	{ -1.181727f, 0.105225f, -0.670572f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.030200f, 0.999500f, -0.009500f }	},
	{	{ -1.168007f, 0.105777f, -0.749201f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.075000f, 0.996600f, -0.033100f }	},
	{	{ -1.138204f, 0.106055f, -0.785945f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.056000f, 0.995900f, -0.071500f }	},
	{	{ -1.104933f, 0.081586f, -0.716376f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.602300f, 0.754000f, 0.262200f }	},
	{	{ -1.107299f, 0.080275f, -0.658650f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.715800f, 0.698100f, 0.017300f }	},
	{	{ -1.104933f, -0.081587f, -0.716376f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.602300f, -0.754000f, 0.262200f }	},
	{	{ -1.107299f, -0.080275f, -0.658650f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.715800f, -0.698100f, 0.017300f }	},
	{	{ -1.181727f, -0.105225f, -0.670571f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.030200f, -0.999500f, -0.009500f }	},
	{	{ -1.168007f, -0.105777f, -0.749201f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.075000f, -0.996600f, -0.033100f }	},
	{	{ -1.138204f, -0.106055f, -0.785944f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.056000f, -0.995900f, -0.071500f }	},
	{	{ -1.106992f, -0.079390f, -0.526027f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.708200f, -0.706000f, -0.002300f }	},
	{	{ -1.105349f, -0.078718f, -0.355957f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.708300f, -0.705900f, -0.005400f }	},
	{	{ -1.184247f, -0.104958f, -0.355957f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.002200f, -1.000000f, -0.000100f }	},
	{	{ -1.185479f, -0.105008f, -0.529000f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.010800f, -0.999900f, -0.001800f }	},
	{	{ -1.263966f, -0.078121f, -0.531972f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.715400f, -0.698500f, -0.017900f }	},
	{	{ -1.263146f, -0.078718f, -0.355957f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.706900f, -0.707300f, 0.002200f }	},
	{	{ -1.263966f, 0.078122f, -0.531972f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.715400f, 0.698500f, -0.017900f }	},
	{	{ -1.263146f, 0.078720f, -0.355957f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.706900f, 0.707300f, 0.002200f }	},
	{	{ -1.184247f, 0.104959f, -0.355957f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.002200f, 1.000000f, -0.000100f }	},
	{	{ -1.185479f, 0.105009f, -0.529000f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.010800f, 0.999900f, -0.001800f }	},
	{	{ -1.106992f, 0.079391f, -0.526027f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.708200f, 0.706000f, -0.002300f }	},
	{	{ -1.105349f, 0.078720f, -0.355957f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.708300f, 0.705900f, -0.005400f }	},
	{	{ -1.289446f, 0.000000f, -0.355957f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.003700f }	},
	{	{ -1.290129f, 0.000000f, -0.532963f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.999700f, 0.000000f, -0.026400f }	},
	{	{ -1.079049f, 0.000000f, -0.355957f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.009400f }	},
	{	{ -1.080830f, 0.000000f, -0.525037f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.007900f }	},
	{	{ -1.082490f, 0.000000f, -0.654675f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.002600f }	},
	{	{ -1.110932f, -0.077329f, -0.871250f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.148100f, -0.660600f, -0.735900f }	},
	{	{ -1.083909f, 0.000000f, -0.705434f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.927400f, 0.000000f, 0.374000f }	},
	{	{ 0.534473f, -0.080847f, 1.189725f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.724900f, -0.688700f, -0.016300f }	},
	{	{ 0.532548f, -0.082165f, 1.220466f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.582200f, -0.762500f, -0.282300f }	},
	{	{ 0.514078f, -0.000000f, 1.205137f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.931200f, -0.000000f, -0.364400f }	},
	{	{ 0.511342f, -0.000000f, 1.181482f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.999900f, -0.000000f, 0.011000f }	},
	{	{ 0.505776f, -0.000000f, 0.868233f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -1.000000f, -0.000000f, 0.009100f }	},
	{	{ 0.531315f, -0.079166f, 0.870582f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.714800f, -0.699300f, 0.004300f }	},
	{	{ 0.534473f, 0.080848f, 1.189725f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.724900f, 0.688700f, -0.016300f }	},
	{	{ 0.531315f, 0.079166f, 0.870582f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.714800f, 0.699300f, 0.004300f }	},
	{	{ 0.532548f, 0.082165f, 1.220466f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.582200f, 0.762500f, -0.282300f }	},
	{	{ 0.584037f, 0.077079f, 1.359328f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.334900f, 0.654500f, 0.677900f }	},
	{	{ 0.484503f, 0.077563f, 1.384403f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.110100f, 0.677800f, 0.727000f }	},
	{	{ 0.488477f, -0.000000f, 1.409213f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.156100f, -0.000000f, 0.987700f }	},
	{	{ 0.594978f, 0.000000f, 1.380353f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.446700f, 0.000000f, 0.894700f }	},
	{	{ 0.661832f, 0.000000f, 1.327766f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.794600f, 0.000000f, 0.607200f }	},
	{	{ 0.643362f, 0.076918f, 1.312438f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.608200f, 0.648600f, 0.457600f }	},
	{	{ 0.584037f, -0.077078f, 1.359328f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.334900f, -0.654500f, 0.677900f }	},
	{	{ 0.643362f, -0.076918f, 1.312438f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.608200f, -0.648600f, 0.457600f }	},
	{	{ 0.484503f, -0.077562f, 1.384403f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.110100f, -0.677800f, 0.727000f }	},
	{	{ 0.472582f, -0.105225f, 1.309974f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.009500f, -0.999500f, 0.030200f }	},
	{	{ 0.551212f, -0.105777f, 1.296255f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.033100f, -0.996600f, 0.075000f }	},
	{	{ 0.587955f, -0.106055f, 1.266452f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.071500f, -0.995900f, 0.056000f }	},
	{	{ 0.518387f, -0.081586f, 1.233181f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.262200f, -0.754000f, -0.602300f }	},
	{	{ 0.460660f, -0.080275f, 1.235546f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.017300f, -0.698100f, -0.715800f }	},
	{	{ 0.518387f, 0.081587f, 1.233181f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.262200f, 0.754000f, -0.602300f }	},
	{	{ 0.460660f, 0.080275f, 1.235546f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.017300f, 0.698100f, -0.715800f }	},
	{	{ 0.472581f, 0.105225f, 1.309974f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.009500f, 0.999500f, 0.030200f }	},
	{	{ 0.551212f, 0.105777f, 1.296255f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.033100f, 0.996600f, 0.075000f }	},
	{	{ 0.587955f, 0.106055f, 1.266452f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.071500f, 0.995900f, 0.056000f }	},
	{	{ 0.328038f, 0.079390f, 1.235240f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.002300f, 0.706000f, -0.708200f }	},
	{	{ 0.157967f, 0.078718f, 1.233596f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.005400f, 0.705900f, -0.708300f }	},
	{	{ 0.157967f, 0.104958f, 1.312494f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.000100f, 1.000000f, 0.002200f }	},
	{	{ 0.331010f, 0.105008f, 1.313726f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.001800f, 0.999900f, 0.010800f }	},
	{	{ 0.333982f, 0.078121f, 1.392214f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.017900f, 0.698500f, 0.715400f }	},
	{	{ 0.157967f, 0.078718f, 1.391393f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.002200f, 0.707300f, 0.706900f }	},
	{	{ 0.333982f, -0.078122f, 1.392214f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.017900f, -0.698500f, 0.715400f }	},
	{	{ 0.157967f, -0.078720f, 1.391393f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.002200f, -0.707300f, 0.706900f }	},
	{	{ 0.157967f, -0.104959f, 1.312494f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.000100f, -1.000000f, 0.002200f }	},
	{	{ 0.331010f, -0.105009f, 1.313726f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.001800f, -0.999900f, 0.010800f }	},
	{	{ 0.328038f, -0.079391f, 1.235240f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.002300f, -0.706000f, -0.708200f }	},
	{	{ 0.157967f, -0.078720f, 1.233596f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.005400f, -0.705900f, -0.708300f }	},
	{	{ 0.157967f, -0.000000f, 1.417693f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.003700f, 0.000000f, 1.000000f }	},
	{	{ 0.334973f, -0.000000f, 1.418376f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.026400f, 0.000000f, 0.999700f }	},
	{	{ 0.157967f, -0.000000f, 1.207296f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.009400f, 0.000000f, -1.000000f }	},
	{	{ 0.327047f, -0.000000f, 1.209077f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.007900f, 0.000000f, -1.000000f }	},
	{	{ 0.456686f, -0.000000f, 1.210737f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.002600f, -0.000000f, -1.000000f }	},
	{	{ 0.603867f, 0.105451f, 1.214452f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.047500f, 0.998800f, 0.010100f }	},
	{	{ 0.607932f, 0.104737f, 0.877629f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.009800f, 1.000000f, 0.001100f }	},
	{	{ 0.673260f, 0.077329f, 1.239180f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.733000f, 0.662100f, 0.156300f }	},
	{	{ 0.684549f, 0.077939f, 0.884675f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.720200f, 0.693700f, 0.011100f }	},
	{	{ 0.696391f, 0.000000f, 1.247422f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.975600f, -0.000000f, 0.219400f }	},
	{	{ 0.710088f, -0.000000f, 0.887024f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.999800f, -0.000000f, 0.017400f }	},
	{	{ 0.673260f, -0.077329f, 1.239180f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.732900f, -0.662100f, 0.156300f }	},
	{	{ 0.684549f, -0.077939f, 0.884675f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.720200f, -0.693700f, 0.011100f }	},
	{	{ 0.603867f, -0.105451f, 1.214452f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.047500f, -0.998800f, 0.010100f }	},
	{	{ 0.607932f, -0.104736f, 0.877629f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 0.009800f, -1.000000f, 0.001100f }	},
	{	{ 0.507445f, -0.000000f, 1.212157f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.374000f, -0.000000f, -0.927400f }	},
};
#define _Pipe_Corner_vertices_
#endif
#ifndef _Pipe_Corner_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Pipe_Corner_indices[912] =
{
	 0, 1, 2,
	 3, 0, 2,
	 4, 5, 0,
	 3, 4, 0,
	 6, 7, 4,
	 3, 6, 4,
	 2, 8, 6,
	 3, 2, 6,
	 9, 10, 11,
	 12, 9, 11,
	 13, 14, 9,
	 12, 13, 9,
	 15, 16, 13,
	 12, 15, 13,
	 11, 17, 15,
	 12, 11, 15,
	 15, 17, 18,
	 19, 15, 18,
	 20, 16, 15,
	 19, 20, 15,
	 21, 1, 20,
	 19, 21, 20,
	 18, 22, 21,
	 19, 18, 21,
	 23, 24, 25,
	 26, 23, 25,
	 27, 8, 23,
	 26, 27, 23,
	 9, 14, 27,
	 26, 9, 27,
	 25, 10, 9,
	 26, 25, 9,
	 28, 29, 30,
	 31, 28, 30,
	 25, 24, 28,
	 31, 25, 28,
	 32, 10, 25,
	 31, 32, 25,
	 30, 33, 32,
	 31, 30, 32,
	 34, 35, 36,
	 37, 34, 36,
	 18, 17, 34,
	 37, 18, 34,
	 38, 22, 18,
	 37, 38, 18,
	 36, 39, 38,
	 37, 36, 38,
	 32, 33, 40,
	 41, 32, 40,
	 11, 10, 32,
	 41, 11, 32,
	 34, 17, 11,
	 41, 34, 11,
	 40, 35, 34,
	 41, 40, 34,
	 38, 39, 42,
	 43, 38, 42,
	 44, 22, 38,
	 43, 44, 38,
	 28, 24, 44,
	 43, 28, 44,
	 42, 29, 28,
	 43, 42, 28,
	 6, 8, 27,
	 45, 6, 27,
	 46, 7, 6,
	 45, 46, 6,
	 47, 48, 46,
	 45, 47, 46,
	 27, 14, 47,
	 45, 27, 47,
	 47, 14, 13,
	 49, 47, 13,
	 50, 48, 47,
	 49, 50, 47,
	 51, 52, 50,
	 49, 51, 50,
	 13, 16, 51,
	 49, 13, 51,
	 51, 16, 20,
	 53, 51, 20,
	 54, 52, 51,
	 53, 54, 51,
	 0, 5, 54,
	 53, 0, 54,
	 20, 1, 0,
	 53, 20, 0,
	 21, 22, 44,
	 55, 21, 44,
	 2, 1, 21,
	 55, 2, 21,
	 23, 8, 2,
	 55, 23, 2,
	 44, 24, 23,
	 55, 44, 23,
	 50, 56, 57,
	 48, 50, 57,
	 54, 5, 58,
	 59, 54, 58,
	 46, 60, 61,
	 7, 46, 61,
	 46, 48, 57,
	 60, 46, 57,
	 61, 62, 63,
	 64, 61, 63,
	 7, 61, 64,
	 4, 7, 64,
	 63, 65, 58,
	 64, 63, 58,
	 66, 67, 68,
	 69, 66, 68,
	 70, 71, 66,
	 69, 70, 66,
	 72, 73, 70,
	 69, 72, 70,
	 68, 74, 72,
	 69, 68, 72,
	 72, 74, 75,
	 76, 72, 75,
	 77, 73, 72,
	 76, 77, 72,
	 78, 62, 77,
	 76, 78, 77,
	 75, 79, 78,
	 76, 75, 78,
	 80, 81, 82,
	 83, 80, 82,
	 84, 65, 80,
	 83, 84, 80,
	 66, 71, 84,
	 83, 66, 84,
	 82, 67, 66,
	 83, 82, 66,
	 85, 86, 87,
	 88, 85, 87,
	 82, 81, 85,
	 88, 82, 85,
	 89, 67, 82,
	 88, 89, 82,
	 87, 90, 89,
	 88, 87, 89,
	 91, 92, 93,
	 94, 91, 93,
	 75, 74, 91,
	 94, 75, 91,
	 95, 79, 75,
	 94, 95, 75,
	 93, 96, 95,
	 94, 93, 95,
	 89, 90, 97,
	 98, 89, 97,
	 68, 67, 89,
	 98, 68, 89,
	 91, 74, 68,
	 98, 91, 68,
	 97, 92, 91,
	 98, 97, 91,
	 95, 96, 99,
	 100, 95, 99,
	 101, 79, 95,
	 100, 101, 95,
	 85, 81, 101,
	 100, 85, 101,
	 99, 86, 85,
	 100, 99, 85,
	 58, 65, 84,
	 59, 58, 84,
	 84, 71, 102,
	 59, 84, 102,
	 102, 71, 70,
	 56, 102, 70,
	 4, 64, 58,
	 5, 4, 58,
	 52, 102, 56,
	 50, 52, 56,
	 70, 73, 57,
	 56, 70, 57,
	 57, 73, 77,
	 60, 57, 77,
	 54, 59, 102,
	 52, 54, 102,
	 77, 62, 61,
	 60, 77, 61,
	 78, 79, 101,
	 103, 78, 101,
	 63, 62, 78,
	 103, 63, 78,
	 80, 65, 63,
	 103, 80, 63,
	 101, 81, 80,
	 103, 101, 80,
	 104, 105, 106,
	 107, 104, 106,
	 108, 109, 104,
	 107, 108, 104,
	 110, 111, 108,
	 107, 110, 108,
	 106, 112, 110,
	 107, 106, 110,
	 113, 114, 115,
	 116, 113, 115,
	 117, 118, 113,
	 116, 117, 113,
	 119, 120, 117,
	 116, 119, 117,
	 115, 121, 119,
	 116, 115, 119,
	 119, 121, 122,
	 123, 119, 122,
	 124, 120, 119,
	 123, 124, 119,
	 125, 105, 124,
	 123, 125, 124,
	 122, 126, 125,
	 123, 122, 125,
	 127, 128, 129,
	 130, 127, 129,
	 131, 112, 127,
	 130, 131, 127,
	 113, 118, 131,
	 130, 113, 131,
	 129, 114, 113,
	 130, 129, 113,
	 132, 133, 134,
	 135, 132, 134,
	 129, 128, 132,
	 135, 129, 132,
	 136, 114, 129,
	 135, 136, 129,
	 134, 137, 136,
	 135, 134, 136,
	 138, 139, 140,
	 141, 138, 140,
	 122, 121, 138,
	 141, 122, 138,
	 142, 126, 122,
	 141, 142, 122,
	 140, 143, 142,
	 141, 140, 142,
	 136, 137, 144,
	 145, 136, 144,
	 115, 114, 136,
	 145, 115, 136,
	 138, 121, 115,
	 145, 138, 115,
	 144, 139, 138,
	 145, 144, 138,
	 142, 143, 146,
	 147, 142, 146,
	 148, 126, 142,
	 147, 148, 142,
	 132, 128, 148,
	 147, 132, 148,
	 146, 133, 132,
	 147, 146, 132,
	 110, 112, 131,
	 149, 110, 131,
	 150, 111, 110,
	 149, 150, 110,
	 151, 152, 150,
	 149, 151, 150,
	 131, 118, 151,
	 149, 131, 151,
	 151, 118, 117,
	 153, 151, 117,
	 154, 152, 151,
	 153, 154, 151,
	 155, 156, 154,
	 153, 155, 154,
	 117, 120, 155,
	 153, 117, 155,
	 155, 120, 124,
	 157, 155, 124,
	 158, 156, 155,
	 157, 158, 155,
	 104, 109, 158,
	 157, 104, 158,
	 124, 105, 104,
	 157, 124, 104,
	 125, 126, 148,
	 159, 125, 148,
	 106, 105, 125,
	 159, 106, 125,
	 127, 112, 106,
	 159, 127, 106,
	 148, 128, 127,
	 159, 148, 127,
	 42, 108, 111,
	 29, 42, 111,
	 29, 111, 150,
	 30, 29, 150,
	 30, 150, 152,
	 33, 30, 152,
	 33, 152, 154,
	 40, 33, 154,
	 40, 154, 156,
	 35, 40, 156,
	 35, 156, 158,
	 36, 35, 158,
	 36, 158, 109,
	 39, 36, 109,
	 39, 109, 108,
	 42, 39, 108,
};
#define _Pipe_Corner_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Pipe_Corner_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Pipe_Corner_materials[1] =
{
	{
		{{ 0.310810f, 0.136332f, 0.035217f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		225.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Orange",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Pipe_Corner_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Pipe_Corner_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Pipe_Corner_batches[1][2] =
{
	{ 912, 0 },
};
#define _Pipe_Corner_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Pipe_Corner_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Pipe_Corner_meshes[1] =
{
	{
		"default",
		912,
		0,
		0,
	},
};
#define _Pipe_Corner_meshes_
#endif
